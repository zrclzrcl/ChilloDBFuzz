CREATE TABLE employees (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    first_name TEXT NOT NULL,
    last_name TEXT NOT NULL,
    email TEXT UNIQUE,
    phone_number TEXT,
    hire_date DATE NOT NULL,
    job_id INTEGER,
    salary REAL,
    commission_pct REAL,
    manager_id INTEGER,
    department_id INTEGER,
    FOREIGN KEY (job_id) REFERENCES jobs(job_id),
    FOREIGN KEY (manager_id) REFERENCES employees(id),
    FOREIGN KEY (department_id) REFERENCES departments(department_id)
);

CREATE TABLE departments (
    department_id INTEGER PRIMARY KEY AUTOINCREMENT,
    department_name TEXT NOT NULL,
    manager_id INTEGER,
    location_id INTEGER,
    FOREIGN KEY (manager_id) REFERENCES employees(id),
    FOREIGN KEY (location_id) REFERENCES locations(location_id)
);

CREATE TABLE jobs (
    job_id INTEGER PRIMARY KEY AUTOINCREMENT,
    job_title TEXT NOT NULL,
    min_salary REAL,
    max_salary REAL
);

CREATE TABLE locations (
    location_id INTEGER PRIMARY KEY AUTOINCREMENT,
    address TEXT,
    postal_code TEXT,
    city TEXT,
    state_province TEXT,
    country_id TEXT
);

INSERT INTO jobs (job_title, min_salary, max_salary) VALUES
('Software Engineer', 60000.00, 120000.00),
('Data Scientist', 70000.00, 130000.00),
('Project Manager', 80000.00, 150000.00);

INSERT INTO locations (address, postal_code, city, state_province, country_id) VALUES
('123 Main St', '90210', 'Beverly Hills', 'CA', 'US'),
('456 Oak Ave', '10001', 'New York', 'NY', 'US'),
('789 Pine Ln', '60611', 'Chicago', 'IL', 'US');

INSERT INTO departments (department_name, manager_id, location_id) VALUES
('Engineering', NULL, 1),
('Data Science', NULL, 2),
('Management', NULL, 3);

INSERT INTO employees (first_name, last_name, email, phone_number, hire_date, job_id, salary, commission_pct, manager_id, department_id) VALUES
('John', 'Doe', 'john.doe@example.com', '555-123-4567', '2022-01-15', 1, 80000.00, 0.10, NULL, 1),
('Jane', 'Smith', 'jane.smith@example.com', '555-987-6543', '2022-02-20', 2, 90000.00, 0.15, NULL, 2),
('Peter', 'Jones', 'peter.jones@example.com', '555-111-2222', '2022-03-10', 3, 100000.00, 0.05, NULL, 3);

SELECT * FROM employees WHERE salary > 75000.00 ORDER BY last_name;

UPDATE employees SET salary = salary * 1.10 WHERE department_id = 1;

SELECT d.department_name, COUNT(e.id) AS employee_count
FROM departments d
LEFT JOIN employees e ON d.department_id = e.department_id
GROUP BY d.department_name;

-- Vacuum the database to remove empty space. SQLite specific command.
VACUUM;

-- Check constraints with a deliberately wrong value (potential edge case)
INSERT INTO employees (first_name, last_name, email, phone_number, hire_date, job_id, salary, commission_pct, manager_id, department_id) VALUES ('Bad', 'Value', 'bad@example.com', '555-555-5555', '2023-01-01', 1, -100, 0, NULL, 1);

SELECT sql FROM sqlite_master WHERE type='table';