CREATE TABLE employees (
    employee_id INTEGER PRIMARY KEY,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20),
    hire_date DATE NOT NULL,
    job_id INTEGER,
    salary DECIMAL(10, 2),
    commission_pct DECIMAL(4, 2),
    manager_id INTEGER,
    department_id INTEGER
);

CREATE TABLE departments (
    department_id INTEGER PRIMARY KEY,
    department_name VARCHAR(50) NOT NULL,
    manager_id INTEGER,
    location_id INTEGER
);

CREATE TABLE jobs (
    job_id INTEGER PRIMARY KEY,
    job_title VARCHAR(50) NOT NULL,
    min_salary DECIMAL(10, 2),
    max_salary DECIMAL(10, 2)
);

INSERT INTO jobs (job_id, job_title, min_salary, max_salary) VALUES
(1, 'Software Engineer', 60000.00, 120000.00),
(2, 'Data Scientist', 70000.00, 130000.00),
(3, 'Project Manager', 80000.00, 150000.00);

INSERT INTO departments (department_id, department_name, manager_id, location_id) VALUES
(10, 'Administration', 200, 1700),
(20, 'Marketing', 201, 1800),
(30, 'Purchasing', 114, 1700);

INSERT INTO employees (employee_id, first_name, last_name, email, phone_number, hire_date, job_id, salary, commission_pct, manager_id, department_id) VALUES
(100, 'Steven', 'King', 'SKING', '515.123.4567', '2003-06-17', 1, 24000.00, NULL, NULL, 10),
(101, 'Neena', 'Kochhar', 'NKOCHHAR', '515.123.4568', '2005-09-21', 2, 17000.00, NULL, 100, 10),
(102, 'Lex', 'De Haan', 'LDEHAAN', '515.123.4569', '2001-01-13', 3, 17000.00, NULL, 100, 10);

CREATE VIEW emp_details_view
AS SELECT
    e.employee_id,
    e.first_name,
    e.last_name,
    j.job_title,
    d.department_name,
    e.salary
FROM
    employees e
JOIN
    jobs j ON e.job_id = j.job_id
JOIN
    departments d ON e.department_id = d.department_id;

CREATE INDEX idx_employee_last_name ON employees (last_name);

PRAGMA foreign_keys = ON;

SELECT CAST('now' AS REAL); -- attempt to cast a string to a numeric type

SELECT * FROM pragma_function_list LIMIT 3; -- use a pragma function list

SELECT typeof(NULL); -- check typeof null values