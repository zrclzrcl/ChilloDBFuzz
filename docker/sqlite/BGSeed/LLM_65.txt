CREATE TABLE products (
    id INTEGER PRIMARY KEY,
    name TEXT NOT NULL,
    description TEXT,
    price REAL NOT NULL CHECK (price > 0),
    category TEXT
);

CREATE TABLE customers (
    customer_id INTEGER PRIMARY KEY,
    first_name TEXT NOT NULL,
    last_name TEXT NOT NULL,
    email TEXT UNIQUE,
    phone TEXT
);

CREATE TABLE orders (
    order_id INTEGER PRIMARY KEY,
    customer_id INTEGER,
    order_date DATETIME DEFAULT CURRENT_TIMESTAMP,
    total REAL,
    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);

CREATE TABLE order_items (
    order_item_id INTEGER PRIMARY KEY,
    order_id INTEGER,
    product_id INTEGER,
    quantity INTEGER NOT NULL CHECK (quantity > 0),
    price REAL,
    FOREIGN KEY (order_id) REFERENCES orders(order_id),
    FOREIGN KEY (product_id) REFERENCES products(id)
);

CREATE INDEX idx_products_category ON products(category);
CREATE TRIGGER update_order_total AFTER INSERT ON order_items
BEGIN
    UPDATE orders SET total = (SELECT SUM(price * quantity) FROM order_items WHERE order_id = NEW.order_id) WHERE order_id = NEW.order_id;
END;

INSERT INTO products (name, description, price, category) VALUES
('Laptop', 'High-performance laptop', 1200.00, 'Electronics'),
('Mouse', 'Wireless mouse', 25.00, 'Electronics'),
('Keyboard', 'Mechanical keyboard', 75.00, 'Electronics'),
('T-shirt', 'Cotton T-shirt', 20.00, 'Clothing');

INSERT INTO customers (first_name, last_name, email, phone) VALUES
('John', 'Doe', 'john.doe@example.com', '123-456-7890'),
('Jane', 'Smith', 'jane.smith@example.com', '987-654-3210');

INSERT INTO orders (customer_id) VALUES (1);
INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (1, 1, 1, 1200.00);
INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (1, 2, 2, 25.00);

SELECT * FROM products WHERE price > 50 ORDER BY name;
SELECT c.first_name, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM customers c JOIN orders o ON c.customer_id = o.customer_id JOIN order_items oi ON o.order_id = oi.order_id GROUP BY c.customer_id ORDER BY total_spent DESC;
SELECT sql FROM sqlite_master WHERE type='table' AND name='products';
PRAGMA table_info(products);