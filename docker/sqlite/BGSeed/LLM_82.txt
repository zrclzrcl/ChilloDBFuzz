CREATE TABLE employees (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    salary DECIMAL(10, 2) CHECK (salary > 0),
    hire_date DATE DEFAULT (date('now')),
    department_id INTEGER,
    FOREIGN KEY (department_id) REFERENCES departments(id)
);

CREATE TABLE departments (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    name VARCHAR(50) UNIQUE NOT NULL,
    location VARCHAR(100)
);

INSERT INTO departments (name, location) VALUES
('Sales', 'New York'),
('Marketing', 'London'),
('Engineering', 'San Francisco');

INSERT INTO employees (first_name, last_name, salary, department_id) VALUES
('John', 'Doe', 60000.00, (SELECT id FROM departments WHERE name = 'Sales')),
('Jane', 'Smith', 75000.00, (SELECT id FROM departments WHERE name = 'Marketing')),
('Peter', 'Jones', 90000.00, (SELECT id FROM departments WHERE name = 'Engineering'));

CREATE VIEW employee_summary AS
SELECT
    e.first_name || ' ' || e.last_name AS full_name,
    e.salary,
    d.name AS department
FROM employees e
JOIN departments d ON e.department_id = d.id;

SELECT * FROM employee_summary WHERE salary > 70000;

CREATE TRIGGER update_salary
BEFORE UPDATE OF salary ON employees
FOR EACH ROW
BEGIN
    SELECT CASE
        WHEN NEW.salary < OLD.salary * 0.9 THEN
            RAISE(FAIL, 'Salary cannot be reduced by more than 10%')
    END;
END;

UPDATE employees SET salary = 50000 WHERE first_name = 'John' AND last_name = 'Doe'; -- This should trigger the error.

SELECT total(salary) OVER (ORDER BY hire_date) AS cumulative_salary FROM employees;

CREATE TABLE json_test (data JSON);
INSERT INTO json_test (data) VALUES ('{"name": "Alice", "age": 30, "city": "Paris"}');
SELECT json_extract(data, '$.age') FROM json_test;

PRAGMA table_info(employees);

SELECT typeof(hire_date) FROM employees;