CREATE TABLE employees (
    employee_id INTEGER PRIMARY KEY AUTOINCREMENT,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20),
    hire_date DATE NOT NULL,
    job_id INTEGER,
    salary DECIMAL(10, 2),
    commission_pct DECIMAL(4, 2),
    manager_id INTEGER,
    department_id INTEGER
);

CREATE TABLE departments (
    department_id INTEGER PRIMARY KEY AUTOINCREMENT,
    department_name VARCHAR(100) NOT NULL,
    manager_id INTEGER,
    location_id INTEGER
);

CREATE VIEW employee_details AS
SELECT
    e.employee_id,
    e.first_name,
    e.last_name,
    e.salary,
    d.department_name
FROM
    employees e
JOIN
    departments d ON e.department_id = d.department_id;

INSERT INTO employees (first_name, last_name, email, hire_date, salary, department_id) VALUES
('John', 'Doe', 'john.doe@example.com', '2022-01-15', 60000.00, 1),
('Jane', 'Smith', 'jane.smith@example.com', '2023-03-20', 75000.00, 2);

INSERT INTO departments (department_name) VALUES
('Sales'),
('Marketing');

SELECT * FROM employee_details;

PRAGMA integrity_check;

SELECT sql FROM sqlite_master WHERE type='table' AND name='employees';

-- Attempt a full-text search, using a potentially non-existent FTS table
SELECT * FROM employees_fts WHERE employees_fts MATCH 'John';

CREATE VIRTUAL TABLE employees_fts USING fts5(first_name, last_name, email, content='employees');

INSERT INTO employees_fts(rowid, first_name, last_name, email) SELECT employee_id, first_name, last_name, email FROM employees;

SELECT * FROM employees_fts WHERE employees_fts MATCH 'John';

SELECT * FROM employees WHERE employee_id IN (SELECT rowid FROM employees_fts WHERE employees_fts MATCH 'John');