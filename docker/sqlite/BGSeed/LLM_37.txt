CREATE TABLE users (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    username TEXT NOT NULL UNIQUE,
    email TEXT UNIQUE,
    age INTEGER,
    city TEXT DEFAULT 'Unknown'
);

INSERT INTO users (username, email, age, city) VALUES
('john_doe', 'john.doe@example.com', 30, 'New York'),
('jane_smith', 'jane.smith@example.org', 25, 'London'),
('peter_jones', NULL, 40, 'Paris');

CREATE TABLE posts (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    user_id INTEGER NOT NULL,
    title TEXT NOT NULL,
    content TEXT,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (user_id) REFERENCES users(id)
);

INSERT INTO posts (user_id, title, content) VALUES
(1, 'My First Post', 'This is the content of my first post.'),
(1, 'Another Post', 'More content from John.'),
(2, 'Jane''s Thoughts', 'Jane sharing her thoughts.');

CREATE INDEX idx_posts_user_id ON posts (user_id);

CREATE VIEW user_posts AS
SELECT users.username, posts.title, posts.created_at
FROM users
JOIN posts ON users.id = posts.user_id;

SELECT * FROM user_posts WHERE username = 'john_doe' AND created_at > date('now', '-1 week');

CREATE TABLE comments (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    post_id INTEGER NOT NULL,
    user_id INTEGER NOT NULL,
    comment_text TEXT,
    created_at DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (post_id) REFERENCES posts(id),
    FOREIGN KEY (user_id) REFERENCES users(id)
);

INSERT INTO comments (post_id, user_id, comment_text) VALUES
(1, 2, 'Great post!'),
(2, 1, 'Thanks for sharing.');

CREATE TRIGGER update_age AFTER INSERT ON users
BEGIN
    UPDATE users SET age = NEW.age + 1 WHERE id = NEW.id AND NEW.age < 100;
END;

INSERT INTO users (username, email, age, city) VALUES ('young_user', 'young@example.com', 5, 'Los Angeles');

SELECT id, username, age, city FROM users WHERE city LIKE 'L%' ORDER BY age DESC LIMIT 2;

SELECT AVG(age) AS average_age FROM users WHERE age > 20;

CREATE TABLE items (id INTEGER PRIMARY KEY, name TEXT, price REAL);
INSERT INTO items (name, price) VALUES ('Apple', 1.0), ('Banana', 0.5), ('Orange', 0.75);

SELECT SUM(price) FROM items;

SELECT * FROM users WHERE email IS NULL;

SELECT quote('This is a quoted string with a \' single quote');

SELECT typeof(123), typeof('abc'), typeof(12.34), typeof(NULL);