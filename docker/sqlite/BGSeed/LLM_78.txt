CREATE TABLE products (
    id INTEGER PRIMARY KEY,
    name TEXT NOT NULL,
    price REAL,
    category TEXT
);

CREATE TABLE customers (
    customer_id INTEGER PRIMARY KEY,
    first_name TEXT,
    last_name TEXT,
    email TEXT UNIQUE
);

CREATE TABLE orders (
    order_id INTEGER PRIMARY KEY,
    customer_id INTEGER,
    order_date DATETIME DEFAULT CURRENT_TIMESTAMP,
    total REAL,
    FOREIGN KEY (customer_id) REFERENCES customers(customer_id)
);

CREATE TABLE order_items (
    order_item_id INTEGER PRIMARY KEY,
    order_id INTEGER,
    product_id INTEGER,
    quantity INTEGER,
    FOREIGN KEY (order_id) REFERENCES orders(order_id),
    FOREIGN KEY (product_id) REFERENCES products(id)
);

INSERT INTO products (name, price, category) VALUES ('Laptop', 1200.00, 'Electronics');
INSERT INTO products (name, price, category) VALUES ('Mouse', 25.00, 'Electronics');
INSERT INTO products (name, price, category) VALUES ('T-Shirt', 20.00, 'Clothing');

INSERT INTO customers (first_name, last_name, email) VALUES ('John', 'Doe', 'john.doe@example.com');
INSERT INTO customers (first_name, last_name, email) VALUES ('Jane', 'Smith', 'jane.smith@example.com');

INSERT INTO orders (customer_id, total) VALUES (1, 1225.00);
INSERT INTO orders (customer_id, total) VALUES (2, 20.00);

INSERT INTO order_items (order_id, product_id, quantity) VALUES (1, 1, 1);
INSERT INTO order_items (order_id, product_id, quantity) VALUES (1, 2, 1);
INSERT INTO order_items (order_id, product_id, quantity) VALUES (2, 3, 1);

SELECT * FROM products WHERE price BETWEEN 20 AND 100;
SELECT c.first_name, o.order_date FROM customers c JOIN orders o ON c.customer_id = o.customer_id WHERE o.order_date LIKE '2023-%';
SELECT category, AVG(price) AS average_price FROM products GROUP BY category;
SELECT name FROM products ORDER BY price DESC LIMIT 1;
SELECT COUNT(*) FROM orders WHERE order_date > date('now', '-7 days');
SELECT SUM(total) FROM orders;
SELECT DISTINCT category FROM products;
PRAGMA table_info(products);
SELECT last_insert_rowid();
SELECT hex(randomblob(4));
SELECT typeof(123);
SELECT NULLIF(10,10);