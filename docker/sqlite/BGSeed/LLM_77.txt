CREATE TABLE employees (
    employee_id INTEGER PRIMARY KEY AUTOINCREMENT,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    hire_date DATE,
    salary DECIMAL(10, 2),
    department_id INTEGER,
    FOREIGN KEY (department_id) REFERENCES departments(department_id)
);

CREATE TABLE departments (
    department_id INTEGER PRIMARY KEY AUTOINCREMENT,
    department_name VARCHAR(50) NOT NULL,
    location_id INTEGER,
    FOREIGN KEY (location_id) REFERENCES locations(location_id)
);

CREATE TABLE locations (
    location_id INTEGER PRIMARY KEY AUTOINCREMENT,
    address VARCHAR(100),
    city VARCHAR(50),
    state VARCHAR(50),
    zip_code VARCHAR(10)
);

CREATE VIEW employee_details AS
SELECT
    e.first_name,
    e.last_name,
    d.department_name,
    l.city
FROM
    employees e
JOIN
    departments d ON e.department_id = d.department_id
JOIN
    locations l ON d.location_id = l.location_id;

CREATE TRIGGER check_salary_increase
BEFORE UPDATE OF salary ON employees
FOR EACH ROW
BEGIN
    SELECT CASE
        WHEN (NEW.salary < OLD.salary) THEN
            RAISE(FAIL, 'Salary cannot be decreased.')
    END;
END;

INSERT INTO locations (address, city, state, zip_code) VALUES
('123 Main St', 'Anytown', 'CA', '91234'),
('456 Oak Ave', 'Springfield', 'IL', '62704');

INSERT INTO departments (department_name, location_id) VALUES
('Sales', 1),
('Marketing', 2);

INSERT INTO employees (first_name, last_name, hire_date, salary, department_id) VALUES
('John', 'Doe', '2022-01-15', 60000.00, 1),
('Jane', 'Smith', '2023-03-20', 75000.00, 2);

SELECT employee_id, first_name || ' ' || last_name AS full_name, salary FROM employees WHERE salary BETWEEN 50000 AND 80000 ORDER BY last_name LIMIT 10;

SELECT department_name, COUNT(*) AS employee_count FROM departments JOIN employees ON departments.department_id = employees.department_id GROUP BY department_name HAVING employee_count > 0;

SELECT typeof(employee_id), sql FROM sqlite_master WHERE type='table' AND name='employees';

PRAGMA table_info(employees);

UPDATE employees SET salary = salary * 1.1 WHERE department_id = (SELECT department_id FROM departments WHERE department_name = 'Sales');

DELETE FROM employees WHERE hire_date < date('now', '-2 years');