CREATE TABLE employees (
    employee_id INTEGER PRIMARY KEY AUTOINCREMENT,
    first_name VARCHAR(50) NOT NULL,
    last_name VARCHAR(50) NOT NULL,
    email VARCHAR(100) UNIQUE,
    phone_number VARCHAR(20),
    hire_date DATE NOT NULL,
    job_id INTEGER,
    salary DECIMAL(10, 2),
    commission_pct DECIMAL(4, 2),
    manager_id INTEGER,
    department_id INTEGER,
    FOREIGN KEY (job_id) REFERENCES jobs(job_id),
    FOREIGN KEY (department_id) REFERENCES departments(department_id),
    FOREIGN KEY (manager_id) REFERENCES employees(employee_id)
);

CREATE TABLE departments (
    department_id INTEGER PRIMARY KEY AUTOINCREMENT,
    department_name VARCHAR(50) NOT NULL,
    manager_id INTEGER,
    location_id INTEGER,
    FOREIGN KEY (manager_id) REFERENCES employees(employee_id),
    FOREIGN KEY (location_id) REFERENCES locations(location_id)
);

CREATE TABLE locations (
    location_id INTEGER PRIMARY KEY AUTOINCREMENT,
    address VARCHAR(100),
    postal_code VARCHAR(20),
    city VARCHAR(50),
    state_province VARCHAR(50),
    country_id VARCHAR(2)
);

CREATE TABLE jobs (
    job_id INTEGER PRIMARY KEY AUTOINCREMENT,
    job_title VARCHAR(50) NOT NULL,
    min_salary DECIMAL(10, 2),
    max_salary DECIMAL(10, 2)
);

INSERT INTO locations (address, postal_code, city, state_province, country_id) VALUES ('2017 Shinagawa', '140', 'Tokyo', NULL, 'JP');
INSERT INTO departments (department_name, location_id) VALUES ('Development', (SELECT location_id FROM locations WHERE city = 'Tokyo'));
INSERT INTO jobs (job_title, min_salary, max_salary) VALUES ('Software Engineer', 60000.00, 120000.00);
INSERT INTO employees (first_name, last_name, email, hire_date, job_id, salary, department_id) VALUES ('John', 'Doe', 'john.doe@example.com', '2023-01-15', (SELECT job_id FROM jobs WHERE job_title = 'Software Engineer'), 75000.00, (SELECT department_id FROM departments WHERE department_name = 'Development'));

SELECT * FROM employees WHERE salary BETWEEN 70000 AND 80000;

UPDATE employees SET salary = salary * 1.1 WHERE department_id = (SELECT department_id FROM departments WHERE department_name = 'Development');

DELETE FROM employees WHERE employee_id NOT IN (SELECT employee_id FROM departments); --Will delete the only row, but tests DELETE in a way

CREATE VIEW EmployeeSummary AS
SELECT
    e.first_name,
    e.last_name,
    d.department_name
FROM
    employees e
JOIN
    departments d ON e.department_id = d.department_id;

SELECT * FROM EmployeeSummary;

PRAGMA table_info(employees);